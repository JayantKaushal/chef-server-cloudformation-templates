
{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "Set up a Ubuntu machine that can be used as a driver for opscode-benchmark",
  "Parameters" : {

    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type" : "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[-_ a-zA-Z0-9]*",
      "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
    },    

    "InstanceType" : {
      "Description" : "EC2 instance type",
      "Type" : "String",
      "Default" : "m1.large",
      "AllowedValues" : [ "m1.large","m1.xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","m3.xlarge","m3.2xlarge","c1.xlarge","cc1.4xlarge","cc2.8xlarge","cg1.4xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type with at least 4 vCPU and 8GB of RAM."
    },

    "SSHLocation" : {
      "Description" : " The IP address range that can be used to SSH to the EC2 instance",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },
  
  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "m1.large"    : { "Arch" : "64" },
      "m1.xlarge"   : { "Arch" : "64" },
      "m2.xlarge"   : { "Arch" : "64" },
      "m2.2xlarge"  : { "Arch" : "64" },
      "m2.4xlarge"  : { "Arch" : "64" },
      "m3.xlarge"   : { "Arch" : "64" },
      "m3.2xlarge"  : { "Arch" : "64" },
      "c1.medium"   : { "Arch" : "64" },
      "c1.xlarge"   : { "Arch" : "64" },
      "cc1.4xlarge" : { "Arch" : "64HVM" },
      "cc2.8xlarge" : { "Arch" : "64HVM" },
      "cg1.4xlarge" : { "Arch" : "64HVM" }
    },

    "AWSRegionArch2AMI" : {
      "ap-northeast-1" : { "32" : "ami-d7118cd6", "64" : "ami-d9118cd8", "64HVM" : "NOT_YET_SUPPORTED" },
      "ap-southeast-1" : { "32" : "ami-e27239b0", "64" : "ami-e07239b2", "64HVM" : "NOT_YET_SUPPORTED" },
      "ap-southeast-2" : { "32" : "ami-75e67b4f", "64" : "ami-6be67b51", "64HVM" : "NOT_YET_SUPPORTED" },
      "eu-west-1"      : { "32" : "ami-7ccf2a0b", "64" : "ami-78cf2a0f", "64HVM" : "NOT_YET_SUPPORTED" },
      "sa-east-1"      : { "32" : "ami-83cd6a93", "64" : "ami-bdcd6aa0", "64HVM" : "NOT_YET_SUPPORTED" },
      "us-east-1"      : { "32" : "ami-51b1ff38", "64" : "ami-53b1ff3a", "64HVM" : "NOT_YET_SUPPORTED" },
      "us-west-1"      : { "32" : "ami-44350001", "64" : "ami-40350005", "64HVM" : "NOT_YET_SUPPORTED" },
      "us-west-2"      : { "32" : "ami-8435a9b4", "64" : "ami-8635a9b6", "64HVM" : "NOT_YET_SUPPORTED" }
    }
  },
    
  "Resources" : {     
    "CfnUser" : {
      "Type" : "AWS::IAM::User",
      "Properties" : {
        "Path": "/",
        "Policies": [ {
          "PolicyName": "root",
          "PolicyDocument": { "Statement": [ {
            "Effect":"Allow",
            "Action":"cloudformation:DescribeStackResource",
            "Resource":"*"
          } ] }
        } ]
      }
    },

    "AccessKey" : {
      "Type" : "AWS::IAM::AccessKey",
      "Properties" : {
        "UserName" : { "Ref" : "CfnUser" }
      }
    },
      
    "BenchmarkDriver": {
      "Type": "AWS::EC2::Instance",
      "Metadata" : {
        "Comment1" : "opscode-benchmark driver machine",

        "AWS::CloudFormation::Init" : {
          "config" : {
            "packages" : {
              "apt" : {
                "git-core" : [],
                "curl": [],
                "g++": [],
                "openjdk-7-jre-headless": [],
                "openjdk-7-jdk": [],
                "ant": [],
                "zlib1g-dev": [],
                "libxml2-dev": [],
                "libxslt-dev": [],
                "libssl-dev": [],
                "gawk": [],
                "make": []
              }
            }
          }
        }
      },
      "Properties": {
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                    { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
        "InstanceType"   : { "Ref" : "InstanceType" },
        "SecurityGroups" : [ {"Ref" : "BenchmarkDriverSecurityGroup"} ],
        "KeyName"        : { "Ref" : "KeyName" },
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -v\n",

          "function error_exit\n",
          "{\n",
          "  cfn-signal -e 1 -r \"$1\" '", { "Ref" : "WaitHandle" }, "'\n",
          "  exit 1\n",
          "}\n",

          "apt-get update\n",
          "apt-get -y install python-setuptools\n",
          "easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
          "cfn-init -v",
          "         -s ", { "Ref" : "AWS::StackName" }, " -r BenchmarkDriver ",
          "         --access-key ", { "Ref" : "AccessKey" },
          "         --secret-key ", {"Fn::GetAtt": ["AccessKey", "SecretAccessKey"]},
          "         --region     ", { "Ref" : "AWS::Region" }, " || error_exit 'Failed to run cfn-init'\n",

          "wget -O /tmp/rvm-installer.sh https://get.rvm.io || error_exit 'Failed to download RVM installer'\n",
          "su -c \"/bin/bash /tmp/rvm-installer.sh stable\" ubuntu || error_exit 'Failed to execute RVM installer'\n",
          "rm -f /tmp/rvm-installer.sh\n",
          "su -c \"/bin/bash --login rvm install jruby-1.6.8\" ubuntu || error_exit 'Failed to install JRuby 1.6.8'\n",
          "su -c \"/bin/bash --login rvm alias create default jruby-1.6.8\" ubuntu || error_exit 'Failed to set default Ruby for ubuntu user'\n",
          "su -c \"/home/ubuntu/.rvm/bin/gem install chef --no-ri --no-rdoc\" ubuntu || error_exit 'Failed to install Chef'\n",

          "# If all went well, signal success\n",
          "cfn-signal -e $? -r 'Benchmark server configuration' '", { "Ref" : "WaitHandle" }, "'\n"
        ]]}}        
      }
    },

    "WaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },

    "WaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "BenchmarkDriver",
      "Properties" : {
        "Handle" : {"Ref" : "WaitHandle"},
        "Timeout" : "600"
      }
    },
    
    "BenchmarkDriverSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH access to benchmark driver",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"}}
        ]
      }      
    }          
  },
  
  "Outputs" : {
    "BenchmarkDriverMachine" : {
      "Value" : { "Fn::GetAtt" : [ "BenchmarkDriver", "PublicDnsName" ] },
      "Description" : "DNS name for benchmark driver machine"
    }
  }
}
